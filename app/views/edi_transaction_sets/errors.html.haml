.row
  .col-md-offset-1.col-md-10
    = render 'shared/search', url: errors_edi_transaction_sets_path, q: @q, range_search: true, carriers: @carriers, carrier: @carrier, from_date: @from_date, to_date: @to_date, placeholder: "Error List, Policy ID"

    %input#erroCheckbox{:onclick => "errorMessage()", :type => "checkbox"}Reinstate error messages

%table.table.margin-top-error.table-condensed
  %thead
    %tr
      %th Policy ID
      %th Transaction
      %th Created GMT
      %th Submitted GMT
      %th Sender
      %th Error List
  %tbody
    = table_empty_to_human if @transactions.count < 1
    - @transactions.each do |t|
      %tr.error-list
        %td.col-md-1
          = t.try(:policy).try(:eg_id)
        %td.col-md-1
          = link_to "#{t.st01}_#{t.transaction_kind}_#{t.transmission.gs02}", edi_transaction_set_path(t)
        %td.col-md-1
          = t.created_at.strftime("%m-%d-%Y %H:%M:%S")
        %td.col-md-1
          = t.submitted_at.strftime("%m-%d-%Y %H:%M:%S")
        %td.col-md-1
          = transaction_error_sender_name(t)
        %td.col-md-9
          - errors = t.error_list.uniq
          - if errors.count > 1
            - errors.each do |error|
              %li
                = error
          - else
            = errors.first

.row
  .col-md-8
    = paginate @transactions, theme: "twitter-bootstrap", pagination_class: "pagination-plain"
  .rol-md-4
    %p
      = "#{number_with_delimiter(@transactions.to_a.count)} / #{number_with_delimiter(@result_set.count)} "
      %small (transactions selected / total)

:javascript
  $(document).ready( function () {
    errorMessage();
  });

  function errorMessage() {
   var error_lists = document.getElementsByClassName("error-list");
    for (var i = 0; i < error_lists.length; i++) {
       if(error_lists[i].innerText.includes('inbound reinstatements are blocked for legacy imports')){
         if(document.getElementById('erroCheckbox').checked == true) {
          error_lists[i].style.display = 'table-row';
         }else{
           error_lists[i].style.display = 'none';
         }
       }
    }
  }